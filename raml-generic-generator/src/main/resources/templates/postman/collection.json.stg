main(api, id) ::= <<
{
    "info": {
        "_postman_id": "<id>",
        "name": "commercetools platform API",
        "description": "This Postman collection contains examples for requests and responses of most endpoints and commands of the commercetools platform API. For every command the smallest possible payload is given. Please find optional fields in the related official documentation. Additionally the collection provides example requests and responses for specific tasks and more complex data models. \n\n## Disclaimer\n\nThis is not the official commercetools platform API documentation. Please see http://dev.commercetools.com/ for a complete and approved documentation of the commercetools platform API.\n\n## How to use\n\nTo use this collection in Postman please perform the following steps:\n1. Download and install the Postman Client\n2. Click the \"Run in Postman\"-button in the header of this page to clone this collection to your Postman client\n3. Duplicate the environment \"commercetools Plattform.template\" and fill out your commercetools client credentials\n4. Obtain an access token by sending the \"Obtain access token\" request at the bottom of the request list. Now you can use all other endpoints. \n\nFeel free to clone and modify this collection to your needs.\n\nTo automate frequent tasks the collection automatically manages commonly required values and parameters such as access tokens or resource ids and versions in Postman environment variables for you.\n\n## Contribute\n\nIf you want to contribute please visit the Github repository: https://github.com/commercetools/commercetools-postman-api-examples\n\nPlease see http://dev.commercetools.com/ for further information about the commercetools Plattform.",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        <authorization(api.oAuth)>,
        <api.resources: {r|<folder(r)>}; separator=",">
    ]
}
>>

folder(resource) ::=<<

{
    "name": "<resource.name>",
    "description": "",
    "items": [
        <resource.items: {item |<(item.template)(item)>}; separator=",">
    ]
}
>>

query(item) ::=<<

{
    "name": "Query <item.name>",
    "event": [
        {
            "listen": "test",
            "script": {
                "type": "text/javascript",
                "exec": [
                    "tests[\"Status code is 200\"] = responseCode.code === 200;"
                ]
            }
        }
    ],
    "request": {
        "method": "<item.method.method>",
        "header": [
            {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
            }
        ],
        "body": {
            "mode": "raw",
            "raw": ""
        },
        "url": {
            "raw": "{{host}}/{{projectKey}}<item.resource.relativeUri.template>",
            "host": [
                "{{host}}"
            ],
            "path": [
                "{{projectKey}}",
                "<item.resource.resourcePathName>"
            ]
        },
        "description": ""
    },
    "response": []
}
>>

create(item) ::=<<

{
    "name": "Create <item.name; format="singularize">",
    "event": [
        {
            "listen": "test",
            "script": {
                "type": "text/javascript",
                "exec": [
                    "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                    "var data = JSON.parse(responseBody);",
                    "if(data.id && data.version){",
                    "    postman.setEnvironmentVariable(\"<item.resource.resourcePathName; format="singularize">-id\", data.id); ",
                    "    postman.setEnvironmentVariable(\"<item.resource.resourcePathName; format="singularize">-version\", data.version);",
                    "}"
                ]
            }
        }
    ],
    "request": {
        "method": "<item.method.method>",
        "header": [
            {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
            },
            {
                "key": "Content-Type",
                "value": "application/json"
            }
        ],
        "body": {
            "mode": "raw",
            "raw": ""
        },
        "url": {
            "raw": "{{host}}/{{projectKey}}<item.resource.relativeUri.template>",
            "host": [
                "{{host}}"
            ],
            "path": [
                "{{projectKey}}",
                "<item.resource.resourcePathName>"
            ]
        },
        "description": ""
    },
    "response": []
}
>>

getById(item) ::=<<
{
    "name": "Get <item.name; format="singularize"> by ID",
    "event": [
        {
            "listen": "test",
            "script": {
                "type": "text/javascript",
                "exec": [
                    "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                    "var data = JSON.parse(responseBody);",
                    "if(data.id && data.version){",
                    "    postman.setEnvironmentVariable(\"<item.resource.resourcePathName; format="singularize">-id\", data.id); ",
                    "    postman.setEnvironmentVariable(\"<item.resource.resourcePathName; format="singularize">-version\", data.version);",
                    "}"
                ]
            }
        }
    ],
    "request": {
        "method": "<item.method.method>",
        "header": [
            {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
            }
        ],
        "body": {
            "mode": "raw",
            "raw": ""
        },
        "url": {
            "raw": "{{host}}/{{projectKey}}<item.resource.relativeUri.template>/{{<item.resource.resourcePathName; format="singularize">-id}}",
            "host": [
                "{{host}}"
            ],
            "path": [
                "{{projectKey}}",
                "<item.resource.resourcePathName>",
                "{{<item.resource.resourcePathName; format="singularize">-id}}"
            ]
        },
        "description": ""
    },
    "response": []
}
>>

getByKey(item) ::=<<
<getByParam(item, "key")>
>>

getByParam(item, param) ::=<<
{
    "name": "Get <item.name; format="singularize"> by <param>",
    "event": [
        {
            "listen": "test",
            "script": {
                "type": "text/javascript",
                "exec": [
                    "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                    "var data = JSON.parse(responseBody);",
                    "if(data.id && data.version){",
                    "    postman.setEnvironmentVariable(\"<item.resource.resourcePathName; format="singularize">-id\", data.id); ",
                    "    postman.setEnvironmentVariable(\"<item.resource.resourcePathName; format="singularize">-<param>\", data.<param>); ",
                    "    postman.setEnvironmentVariable(\"<item.resource.resourcePathName; format="singularize">-version\", data.version);",
                    "}"
                ]
            }
        }
    ],
    "request": {
        "method": "<item.method.method>",
        "header": [
            {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
            }
        ],
        "body": {
            "mode": "raw",
            "raw": ""
        },
        "url": {
            "raw": "{{host}}/{{projectKey}}<item.resource.relativeUri.template>/<param>={{<item.resource.resourcePathName; format="singularize">-<param>}}",
            "host": [
                "{{host}}"
            ],
            "path": [
                "{{projectKey}}",
                "<item.resource.resourcePathName>",
                "<param>={{<item.resource.resourcePathName; format="singularize">-<param>}}"
            ]
        },
        "description": ""
    },
    "response": []
}
>>

authorization(oauth) ::=<<
{
    "name": "Authorization",
    "description": "",
    "item": [
        {
            "name": "Obtain access token",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "tests[\"Status code is 200\"] = responseCode.code === 200;",
                            "var data = JSON.parse(responseBody);",
                            "if(data.access_token){",
                            "    postman.setEnvironmentVariable(\"access_token\", data.access_token);",
                            "}"
                        ]
                    }
                }
            ],
            "request": {
                "auth": {
                    "type": "basic",
                    "basic": [
                        {
                            "key": "username",
                            "value": "{{client_id}}",
                            "type": "string"
                        },
                        {
                            "key": "password",
                            "value": "{{client_secret}}",
                            "type": "string"
                        },
                        {
                            "key": "saveHelperData",
                            "type": "any"
                        },
                        {
                            "key": "showPassword",
                            "value": false,
                            "type": "boolean"
                        }
                    ]
                },
                "method": "POST",
                "header": [],
                "body": {
                    "mode": "raw",
                    "raw": ""
                },
                "url": {
                    "raw": "https://{{auth_url}}<oauth.uri.path>?grant_type=client_credentials",
                    "protocol": "https",
                    "host": [
                        "{{auth_url}}"
                    ],
                    "path": [
                        "<oauth.uri.pathElements; separator="\",\"">"
                    ],
                    "query": [
                        {
                            "key": "grant_type",
                            "value": "client_credentials",
                            "equals": true
                        }
                    ]
                },
                "description": "Use this request to obtain an access token for your commercetools platform project via Client Credentials Flow. As a prerequisite you must have filled out environment variables in Postman for projectKey, client_id and client_secret to use this."
            },
            "response": []
        },
        {
            "name": "Obtain access token through password flow",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "tests[\"Status code is 200\"] = responseCode.code === 200;"
                        ]
                    }
                }
            ],
            "request": {
                "auth": {
                    "type": "basic",
                    "basic": [
                        {
                            "key": "username",
                            "value": "{{client_id}}",
                            "type": "string"
                        },
                        {
                            "key": "password",
                            "value": "{{client_secret}}",
                            "type": "string"
                        },
                        {
                            "key": "saveHelperData",
                            "type": "any"
                        },
                        {
                            "key": "showPassword",
                            "value": false,
                            "type": "boolean"
                        }
                    ]
                },
                "method": "POST",
                "header": [
                    {
                        "key": "",
                        "value": "",
                        "disabled": true
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": ""
                },
                "url": {
                    "raw": "https://{{auth_url}}/oauth/{{projectKey}}/customers/token?grant_type=password&username={{user_email}}&password={{user_password}}",
                    "protocol": "https",
                    "host": [
                        "{{auth_url}}"
                    ],
                    "path": [
                        "oauth",
                        "{{projectKey}}",
                        "customers",
                        "token"
                    ],
                    "query": [
                        {
                            "key": "grant_type",
                            "value": "password",
                            "equals": true
                        },
                        {
                            "key": "username",
                            "value": "{{user_email}}",
                            "equals": true
                        },
                        {
                            "key": "password",
                            "value": "{{user_password}}",
                            "equals": true
                        },
                        {
                            "key": "scope",
                            "value": "manage_project:{{projectKey}}",
                            "equals": true
                        }
                    ]
                },
                "description": "Use this request to obtain an access token for your commercetools platform project via Password Flow. As a prerequisite you must have filled out environment variables in Postman for projectKey, client_id, client_secret, user_email and user_password to use this."
            },
            "response": []
        },
        {
            "name": "Token for Anonymous Sessions",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "tests[\"Status code is 200\"] = responseCode.code === 200;"
                        ]
                    }
                }
            ],
            "request": {
                "auth": {
                    "type": "basic",
                    "basic": [
                        {
                            "key": "username",
                            "value": "{{client_id}}",
                            "type": "string"
                        },
                        {
                            "key": "password",
                            "value": "{{client_secret}}",
                            "type": "string"
                        },
                        {
                            "key": "saveHelperData",
                            "type": "any"
                        },
                        {
                            "key": "showPassword",
                            "value": false,
                            "type": "boolean"
                        }
                    ]
                },
                "method": "POST",
                "header": [],
                "body": {
                    "mode": "raw",
                    "raw": ""
                },
                "url": {
                    "raw": "https://{{auth_url}}/oauth/{{projectKey}}/anonymous/token?grant_type=client_credentials&scope=manage_my_profile:{{projectKey}}",
                    "protocol": "https",
                    "host": [
                        "{{auth_url}}"
                    ],
                    "path": [
                        "oauth",
                        "{{projectKey}}",
                        "anonymous",
                        "token"
                    ],
                    "query": [
                        {
                            "key": "grant_type",
                            "value": "client_credentials",
                            "equals": true
                        },
                        {
                            "key": "scope",
                            "value": "manage_my_profile:{{projectKey}}",
                            "equals": true
                        }
                    ]
                },
                "description": "Use this request to obtain an access token for a anonymous session. As a prerequisite you must have filled out environment variables in Postman for projectKey, client_id and client_secret to use this."
            },
            "response": []
        },
        {
            "name": "Token Introspection",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "tests[\"Status code is 200\"] = responseCode.code === 200;"
                        ]
                    }
                }
            ],
            "request": {
                "auth": {
                    "type": "basic",
                    "basic": [
                        {
                            "key": "username",
                            "value": "{{client_id}}",
                            "type": "string"
                        },
                        {
                            "key": "password",
                            "value": "{{client_secret}}",
                            "type": "string"
                        },
                        {
                            "key": "saveHelperData",
                            "type": "any"
                        },
                        {
                            "key": "showPassword",
                            "value": false,
                            "type": "boolean"
                        }
                    ]
                },
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": ""
                },
                "url": {
                    "raw": "https://{{auth_url}}/oauth/introspect?token={{access_token}}",
                    "protocol": "https",
                    "host": [
                        "{{auth_url}}"
                    ],
                    "path": [
                        "oauth",
                        "introspect"
                    ],
                    "query": [
                        {
                            "key": "token",
                            "value": "{{access_token}}",
                            "equals": true
                        }
                    ]
                },
                "description": "Token introspection allows to determine the active state of an OAuth 2.0 access token and to determine meta-information about this accces token, such as the `scope`."
            },
            "response": [
                {
                    "id": "f43a127f-3fac-4a7c-84df-06974c7d7d8b",
                    "name": "Successful introspection",
                    "originalRequest": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": ""
                        },
                        "url": {
                            "raw": "https://{{auth_url}}/oauth/introspect?token={{access_token}}",
                            "protocol": "https",
                            "host": [
                                "{{auth_url}}"
                            ],
                            "path": [
                                "oauth",
                                "introspect"
                            ],
                            "query": [
                                {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "equals": true
                                }
                            ]
                        },
                        "description": ""
                    },
                    "status": "OK",
                    "code": 200,
                    "_postman_previewlanguage": "json",
                    "_postman_previewtype": "html",
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Authorization, Content-Type, Origin, User-Agent",
                            "name": "Access-Control-Allow-Headers",
                            "description": ""
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "GET, POST, DELETE, OPTIONS",
                            "name": "Access-Control-Allow-Methods",
                            "description": ""
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": "*",
                            "name": "Access-Control-Allow-Origin",
                            "description": ""
                        },
                        {
                            "key": "Access-Control-Max-Age",
                            "value": "299",
                            "name": "Access-Control-Max-Age",
                            "description": ""
                        },
                        {
                            "key": "Alt-Svc",
                            "value": "clear",
                            "name": "Alt-Svc",
                            "description": ""
                        },
                        {
                            "key": "Cache-Control",
                            "value": "no-store",
                            "name": "Cache-Control",
                            "description": ""
                        },
                        {
                            "key": "Content-Encoding",
                            "value": "gzip",
                            "name": "Content-Encoding",
                            "description": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json; charset=utf-8",
                            "name": "Content-Type",
                            "description": ""
                        },
                        {
                            "key": "Date",
                            "value": "Mon, 31 Jul 2017 12:45:30 GMT",
                            "name": "Date",
                            "description": ""
                        },
                        {
                            "key": "Pragma",
                            "value": "no-cache",
                            "name": "Pragma",
                            "description": ""
                        },
                        {
                            "key": "Server",
                            "value": "nginx",
                            "name": "Server",
                            "description": ""
                        },
                        {
                            "key": "Transfer-Encoding",
                            "value": "chunked",
                            "name": "Transfer-Encoding",
                            "description": ""
                        },
                        {
                            "key": "Via",
                            "value": "1.1 google",
                            "name": "Via",
                            "description": ""
                        },
                        {
                            "key": "X-Correlation-ID",
                            "value": "auth-3283b690-a28e-40c6-81c2-143e7d954334",
                            "name": "X-Correlation-ID",
                            "description": ""
                        },
                        {
                            "key": "X-Served-By",
                            "value": "auth-gce-9b803276.sphere.prod.commercetools.de",
                            "name": "X-Served-By",
                            "description": ""
                        },
                        {
                            "key": "X-Served-Config",
                            "value": "sphere-auth-ws-1.0",
                            "name": "X-Served-Config",
                            "description": ""
                        }
                    ],
                    "cookie": [],
                    "responseTime": "59",
                    "body": "{\"active\":true,\"scope\":\"manage_project:valentins-test-92\",\"exp\":1501677875850}"
                },
                {
                    "id": "569f141e-23c6-4aa3-a69f-6e78432488ce",
                    "name": "Inactive token",
                    "originalRequest": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": ""
                        },
                        "url": {
                            "raw": "https://{{auth_url}}/oauth/introspect?token={{access_token}}",
                            "protocol": "https",
                            "host": [
                                "{{auth_url}}"
                            ],
                            "path": [
                                "oauth",
                                "introspect"
                            ],
                            "query": [
                                {
                                    "key": "token",
                                    "value": "{{access_token}}",
                                    "equals": true
                                }
                            ]
                        },
                        "description": ""
                    },
                    "status": "OK",
                    "code": 200,
                    "_postman_previewlanguage": "json",
                    "_postman_previewtype": "html",
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Authorization, Content-Type, Origin, User-Agent",
                            "name": "Access-Control-Allow-Headers",
                            "description": ""
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "GET, POST, DELETE, OPTIONS",
                            "name": "Access-Control-Allow-Methods",
                            "description": ""
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": "*",
                            "name": "Access-Control-Allow-Origin",
                            "description": ""
                        },
                        {
                            "key": "Access-Control-Max-Age",
                            "value": "299",
                            "name": "Access-Control-Max-Age",
                            "description": ""
                        },
                        {
                            "key": "Alt-Svc",
                            "value": "clear",
                            "name": "Alt-Svc",
                            "description": ""
                        },
                        {
                            "key": "Cache-Control",
                            "value": "no-store",
                            "name": "Cache-Control",
                            "description": ""
                        },
                        {
                            "key": "Content-Length",
                            "value": "16",
                            "name": "Content-Length",
                            "description": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json; charset=utf-8",
                            "name": "Content-Type",
                            "description": ""
                        },
                        {
                            "key": "Date",
                            "value": "Mon, 31 Jul 2017 13:18:28 GMT",
                            "name": "Date",
                            "description": ""
                        },
                        {
                            "key": "Pragma",
                            "value": "no-cache",
                            "name": "Pragma",
                            "description": ""
                        },
                        {
                            "key": "Server",
                            "value": "nginx",
                            "name": "Server",
                            "description": ""
                        },
                        {
                            "key": "Via",
                            "value": "1.1 google",
                            "name": "Via",
                            "description": ""
                        },
                        {
                            "key": "X-Correlation-ID",
                            "value": "auth-e5e746a5-6101-4f5c-8c36-a864e63b3d15",
                            "name": "X-Correlation-ID",
                            "description": ""
                        },
                        {
                            "key": "X-Served-By",
                            "value": "auth-gce-9b803276.sphere.prod.commercetools.de",
                            "name": "X-Served-By",
                            "description": ""
                        },
                        {
                            "key": "X-Served-Config",
                            "value": "sphere-auth-ws-1.0",
                            "name": "X-Served-Config",
                            "description": ""
                        }
                    ],
                    "cookie": [],
                    "responseTime": "47",
                    "body": "{\"active\":false}"
                }
            ]
        }
    ]
}
>>
